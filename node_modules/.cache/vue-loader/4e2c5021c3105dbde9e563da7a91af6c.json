{"remainingRequest":"/Users/martadom/Desktop/TFM/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/martadom/Desktop/TFM/test/src/views/Login.vue?vue&type=style&index=0&id=26084dc2&lang=scss&scoped=true&","dependencies":[{"path":"/Users/martadom/Desktop/TFM/test/src/views/Login.vue","mtime":1693494846482},{"path":"/Users/martadom/Desktop/TFM/test/node_modules/css-loader/dist/cjs.js","mtime":1688895654492},{"path":"/Users/martadom/Desktop/TFM/test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1688895654604},{"path":"/Users/martadom/Desktop/TFM/test/node_modules/postcss-loader/src/index.js","mtime":1688895654577},{"path":"/Users/martadom/Desktop/TFM/test/node_modules/sass-loader/dist/cjs.js","mtime":1688895656410},{"path":"/Users/martadom/Desktop/TFM/test/node_modules/cache-loader/dist/cjs.js","mtime":1688895642525},{"path":"/Users/martadom/Desktop/TFM/test/node_modules/vue-loader/lib/index.js","mtime":1688895654604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJ0Bjb3JlL3ByZXNldC9wcmVzZXQvcGFnZXMvYXV0aC5zY3NzJzsK"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6MA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"auth-wrapper auth-v1\">\n    <div class=\"auth-inner\">\n      <v-card class=\"auth-card\">\n        <!-- logo -->\n        <v-card-title class=\"d-flex align-center justify-center py-7\">\n          <router-link\n            to=\"/\"\n            class=\"d-flex align-center\"\n          >\n            <v-img\n              :src=\"appLogo\"\n              max-height=\"30px\"\n              max-width=\"30px\"\n              alt=\"logo\"\n              contain\n              class=\"me-3 \"\n            ></v-img>\n\n            <h2 class=\"text-2xl font-weight-semibold\">\n              {{ appName }}\n            </h2>\n          </router-link>\n        </v-card-title>\n\n        <!-- login form -->\n        <v-card-text>\n          <v-form>\n            <v-text-field\n              id=\"email\"\n              v-model=\"email\"\n              outlined\n              label=\"Email\"\n              placeholder=\"\"\n              hide-details\n              class=\"mb-3\"\n            ></v-text-field>\n\n            <v-text-field\n              id=\"password\"\n              v-model=\"password\"\n              outlined\n              :type=\"isPasswordVisible ? 'text' : 'password'\"\n              label=\"Contraseña\"\n              placeholder=\"············\"\n              :append-icon=\"isPasswordVisible ? icons.mdiEyeOffOutline : icons.mdiEyeOutline\"\n              hide-details\n              @click:append=\"isPasswordVisible = !isPasswordVisible\"\n            ></v-text-field>\n\n            <!--  <div class=\"d-flex align-center justify-space-between flex-wrap\">\n              forgot link\n              <router-link\n                :to=\"{name:'auth-forgot-password-v1'}\"\n                class=\"mt-1\"\n              >\n                Forgot Password?\n              </router-link>\n            </div> -->\n\n            <v-btn\n              id=\"button_login\"\n              block\n              color=\"primary\"\n              class=\"mt-6\"\n              @click=\"logIn\"\n            >\n              Iniciar sesión\n            </v-btn>\n          </v-form>\n        </v-card-text>\n\n        <!-- create new account  -->\n        <v-card-text class=\"d-flex align-center justify-center flex-wrap mt-2\">\n          <span class=\"me-2\">\n            Nuevo en la plataforma?\n          </span>\n          <router-link :to=\"{name:'auth-register-v1'}\">\n            Crea una cuenta\n          </router-link>\n        </v-card-text>\n      </v-card>\n    </div>\n  </div>\n</template>\n\n<script>\n// eslint-disable-next-line object-curly-newline\nimport { useRouter } from '@core/utils'\nimport { emailValidator, required } from '@core/utils/validation'\nimport { mdiEyeOffOutline, mdiEyeOutline } from '@mdi/js'\nimport themeConfig from '@themeConfig'\nimport { getCurrentInstance, ref } from '@vue/composition-api'\nimport { uuid } from 'vue-uuid'\n\nimport { auth, signInWithEmailAndPassword } from '../firebase'\n\nexport default {\n  setup() {\n    // Template Ref\n    const loginForm = ref(null)\n\n    const vm = getCurrentInstance().proxy\n    const { router } = useRouter()\n\n    const isPasswordVisible = ref(false)\n\n    const email = ref('')\n    const password = ref('')\n    const errorMessages = ref([])\n\n    const logIn = async () => {\n      // const isFormValid = loginForm.value.validate()\n\n      // if (!isFormValid) return\n\n      signInWithEmailAndPassword(auth, email.value, password.value)\n        .then(user => {\n          // Set user's data in localStorage for UI/Other purpose\n          localStorage.setItem('userData', JSON.stringify(user))\n          localStorage.setItem('userAbility', JSON.stringify([{ action: 'manage', subject: 'all' }]))\n          const sessionId = uuid.v1()\n          localStorage.setItem('sessionId', JSON.stringify(sessionId))\n\n          // localStorage.setItem('accessToken', token)\n\n          // On success redirect to home\n          console.log(`User logged in: ${JSON.stringify(user?.user?.email)}`)\n          router.push('/home')\n        })\n        .catch(error => {\n          console.error('Oops, Unable to login!')\n          console.log('error : ', error)\n        })\n\n      // axios\n      //   .post('/auth/login', { email: email.value, password: password.value })\n      //   .then(response => {\n      //     const { accessToken } = response.data\n\n      //     // ? Set access token in localStorage so axios interceptor can use it\n      //     // Axios Interceptors: https://github.com/axios/axios#interceptors\n      //     localStorage.setItem('accessToken', accessToken)\n\n      //     return response\n      //   })\n      //   .then(() => {\n      //     axios.get('/auth/me').then(response => {\n      //       const { user } = response.data\n      //       const { ability: userAbility } = user\n\n      //       // Set user ability\n      //       // ? https://casl.js.org/v5/en/guide/intro#update-rules\n      //       vm.$ability.update(userAbility)\n\n      //       // Set user's ability in localStorage for Access Control\n      //       localStorage.setItem('userAbility', JSON.stringify(userAbility))\n\n      //       // We will store `userAbility` in localStorage separate from userData\n      //       // Hence, we are just removing it from user object\n      //       delete user.ability\n\n      //       // Set user's data in localStorage for UI/Other purpose\n      //       localStorage.setItem('userData', JSON.stringify(user))\n\n      //       // On success redirect to home\n      //       router.push('/')\n      //     })\n      //   })\n      //   .catch(error => {\n      //     // TODO: Next Update - Show notification\n      //     console.error('Oops, Unable to login!')\n      //     console.log('error :>> ', error.response)\n      //     errorMessages.value = error.response.data.error\n      //   })\n    }\n\n    return {\n      logIn,\n\n      isPasswordVisible,\n      email,\n      password,\n      errorMessages,\n      icons: {\n        mdiEyeOutline,\n        mdiEyeOffOutline,\n      },\n      validators: {\n        required,\n        emailValidator,\n      },\n\n      // themeConfig\n      appName: themeConfig.app.name,\n      appLogo: themeConfig.app.logo,\n\n      // Template Refs\n      loginForm,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@core/preset/preset/pages/auth.scss';\n</style>\n"]}]}