{"remainingRequest":"/Users/martadom/Desktop/TFM/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/martadom/Desktop/TFM/test/src/@core/layouts/components/app-bar/AppBarThemeSwitcher.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/martadom/Desktop/TFM/test/src/@core/layouts/components/app-bar/AppBarThemeSwitcher.vue","mtime":1689868462000},{"path":"/Users/martadom/Desktop/TFM/test/node_modules/cache-loader/dist/cjs.js","mtime":1688895642525},{"path":"/Users/martadom/Desktop/TFM/test/node_modules/babel-loader/lib/index.js","mtime":1688895642501},{"path":"/Users/martadom/Desktop/TFM/test/node_modules/cache-loader/dist/cjs.js","mtime":1688895642525},{"path":"/Users/martadom/Desktop/TFM/test/node_modules/vue-loader/lib/index.js","mtime":1688895654604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHNhdmVFdmVudCB9IGZyb20gJ0AvdXRpbHMnCmltcG9ydCB1c2VBcHBDb25maWcgZnJvbSAnQGNvcmUvQGFwcC1jb25maWcvdXNlQXBwQ29uZmlnJwppbXBvcnQgeyBtZGlXZWF0aGVyTmlnaHQsIG1kaVdlYXRoZXJTdW5ueSB9IGZyb20gJ0BtZGkvanMnCgpleHBvcnQgZGVmYXVsdCB7CiAgc2V0dXAoKSB7CiAgICBjb25zdCB7IGlzRGFyayB9ID0gdXNlQXBwQ29uZmlnKCkKCiAgICBjb25zdCBzd2l0Y2hUaGVtZSA9ICgpID0+IHsKICAgICAgaXNEYXJrLnZhbHVlID0gIWlzRGFyay52YWx1ZQogICAgICBzYXZlRXZlbnQoeyBldmVudFR5cGU6IGlzRGFyay52YWx1ZSA/ICdUSEVNRV9TV0lUQ0hfREFSSycgOiAnVEhFTUVfU1dJVENIX0xJR0hUJyB9KQogICAgfQoKICAgIHJldHVybiB7CiAgICAgIGlzRGFyaywKICAgICAgc3dpdGNoVGhlbWUsCgogICAgICAvLyBJY29ucwogICAgICBpY29uczogewogICAgICAgIG1kaVdlYXRoZXJOaWdodCwKICAgICAgICBtZGlXZWF0aGVyU3VubnksCiAgICAgIH0sCiAgICB9CiAgfSwKfQo="},{"version":3,"sources":["AppBarThemeSwitcher.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AppBarThemeSwitcher.vue","sourceRoot":"src/@core/layouts/components/app-bar","sourcesContent":["<template>\n  <v-fade-transition mode=\"out-in\">\n    <v-icon\n      :key=\"isDark\"\n      @click=\"switchTheme\"\n    >\n      {{ isDark ? icons.mdiWeatherSunny : icons.mdiWeatherNight }}\n    </v-icon>\n  </v-fade-transition>\n</template>\n\n<script>\nimport { saveEvent } from '@/utils'\nimport useAppConfig from '@core/@app-config/useAppConfig'\nimport { mdiWeatherNight, mdiWeatherSunny } from '@mdi/js'\n\nexport default {\n  setup() {\n    const { isDark } = useAppConfig()\n\n    const switchTheme = () => {\n      isDark.value = !isDark.value\n      saveEvent({ eventType: isDark.value ? 'THEME_SWITCH_DARK' : 'THEME_SWITCH_LIGHT' })\n    }\n\n    return {\n      isDark,\n      switchTheme,\n\n      // Icons\n      icons: {\n        mdiWeatherNight,\n        mdiWeatherSunny,\n      },\n    }\n  },\n}\n</script>\n\n<style>\n</style>\n"]}]}