{"remainingRequest":"/Users/martadom/Desktop/TFM/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/martadom/Desktop/TFM/test/src/@core/layouts/components/app-bar/AppBarI18n.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/martadom/Desktop/TFM/test/src/@core/layouts/components/app-bar/AppBarI18n.vue","mtime":1689868462000},{"path":"/Users/martadom/Desktop/TFM/test/node_modules/cache-loader/dist/cjs.js","mtime":1688895642525},{"path":"/Users/martadom/Desktop/TFM/test/node_modules/babel-loader/lib/index.js","mtime":1688895642501},{"path":"/Users/martadom/Desktop/TFM/test/node_modules/cache-loader/dist/cjs.js","mtime":1688895642525},{"path":"/Users/martadom/Desktop/TFM/test/node_modules/vue-loader/lib/index.js","mtime":1688895654604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGxvYWRMYW5ndWFnZUFzeW5jIH0gZnJvbSAnQC9wbHVnaW5zL2kxOG4nCmltcG9ydCB1c2VBcHBDb25maWcgZnJvbSAnQGNvcmUvQGFwcC1jb25maWcvdXNlQXBwQ29uZmlnJwoKZXhwb3J0IGRlZmF1bHQgewogIHNldHVwKCkgewogICAgY29uc3QgeyBpc1J0bCB9ID0gdXNlQXBwQ29uZmlnKCkKCiAgICBjb25zdCBsb2NhbGVzID0gWwogICAgICB7CiAgICAgICAgdGl0bGU6ICdFbmdsaXNoJywKICAgICAgICBpbWc6IHJlcXVpcmUoJ0AvYXNzZXRzL2ltYWdlcy9mbGFncy9lbi5wbmcnKSwKICAgICAgICBsb2NhbGU6ICdlbicsCiAgICAgIH0sCiAgICAgIHsKICAgICAgICB0aXRsZTogJ0ZyZW5jaCcsCiAgICAgICAgaW1nOiByZXF1aXJlKCdAL2Fzc2V0cy9pbWFnZXMvZmxhZ3MvZnIucG5nJyksCiAgICAgICAgbG9jYWxlOiAnZnInLAogICAgICB9LAogICAgICB7CiAgICAgICAgdGl0bGU6ICdBcmFiaWMnLAogICAgICAgIGltZzogcmVxdWlyZSgnQC9hc3NldHMvaW1hZ2VzL2ZsYWdzL2FyLnBuZycpLAogICAgICAgIGxvY2FsZTogJ2FyJywKICAgICAgfSwKICAgIF0KCiAgICBjb25zdCB1cGRhdGVBY3RpdmVMb2NhbGUgPSBsb2NhbGUgPT4gewogICAgICAvLyBTZXQgdG8gUlRMIG1vZGUgaWYgbG9jYWxlIGlzIGFyYWJpYwogICAgICBpc1J0bC52YWx1ZSA9IGxvY2FsZSA9PT0gJ2FyJwoKICAgICAgbG9hZExhbmd1YWdlQXN5bmMobG9jYWxlKQogICAgfQoKICAgIHJldHVybiB7CiAgICAgIGxvY2FsZXMsCiAgICAgIHVwZGF0ZUFjdGl2ZUxvY2FsZSwKICAgIH0KICB9LAp9Cg=="},{"version":3,"sources":["AppBarI18n.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"AppBarI18n.vue","sourceRoot":"src/@core/layouts/components/app-bar","sourcesContent":["<template>\n  <v-menu\n    offset-y\n    nudge-bottom=\"22\"\n    min-width=\"175\"\n    left\n    :elevation=\"$vuetify.theme.dark ? 9 : 8\"\n  >\n    <!-- Activator -->\n    <template v-slot:activator=\"{ on, attrs }\">\n      <div\n        v-bind=\"attrs\"\n        class=\"d-flex align-center\"\n        v-on=\"on\"\n      >\n        <v-img\n          :src=\"require(`@/assets/images/flags/${$i18n.locale}.png`)\"\n          :alt=\"$i18n.locale\"\n          height=\"14px\"\n          width=\"22px\"\n          class=\"me-2\"\n        ></v-img>\n        <span v-if=\"$vuetify.breakpoint.smAndUp\">{{ locales.find(l => l.locale === $i18n.locale).title }}</span>\n      </div>\n    </template>\n\n    <!-- Options List -->\n    <v-list>\n      <v-list-item-group\n        :value=\"$i18n.locale\"\n        @change=\"updateActiveLocale\"\n      >\n        <v-list-item\n          v-for=\"locale in locales\"\n          :key=\"locale.locale\"\n          :value=\"locale.locale\"\n        >\n          <v-img\n            :src=\"locale.img\"\n            height=\"14px\"\n            width=\"22px\"\n            :alt=\"locale.locale\"\n            class=\"me-2\"\n          ></v-img>\n          <v-list-item-title>{{ locale.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list-item-group>\n    </v-list>\n  </v-menu>\n</template>\n\n<script>\nimport { loadLanguageAsync } from '@/plugins/i18n'\nimport useAppConfig from '@core/@app-config/useAppConfig'\n\nexport default {\n  setup() {\n    const { isRtl } = useAppConfig()\n\n    const locales = [\n      {\n        title: 'English',\n        img: require('@/assets/images/flags/en.png'),\n        locale: 'en',\n      },\n      {\n        title: 'French',\n        img: require('@/assets/images/flags/fr.png'),\n        locale: 'fr',\n      },\n      {\n        title: 'Arabic',\n        img: require('@/assets/images/flags/ar.png'),\n        locale: 'ar',\n      },\n    ]\n\n    const updateActiveLocale = locale => {\n      // Set to RTL mode if locale is arabic\n      isRtl.value = locale === 'ar'\n\n      loadLanguageAsync(locale)\n    }\n\n    return {\n      locales,\n      updateActiveLocale,\n    }\n  },\n}\n</script>\n"]}]}