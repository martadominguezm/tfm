{"remainingRequest":"/Users/martadom/Desktop/TFM/tfm-marta-npm/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/martadom/Desktop/TFM/tfm-marta-npm/src/views/Register.vue?vue&type=style&index=0&id=63ae9146&lang=scss&scoped=true&","dependencies":[{"path":"/Users/martadom/Desktop/TFM/tfm-marta-npm/src/views/Register.vue","mtime":1693494846483},{"path":"/Users/martadom/Desktop/TFM/tfm-marta-npm/node_modules/css-loader/dist/cjs.js","mtime":1688895654492},{"path":"/Users/martadom/Desktop/TFM/tfm-marta-npm/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1688895654604},{"path":"/Users/martadom/Desktop/TFM/tfm-marta-npm/node_modules/postcss-loader/src/index.js","mtime":1688895654577},{"path":"/Users/martadom/Desktop/TFM/tfm-marta-npm/node_modules/sass-loader/dist/cjs.js","mtime":1688895656410},{"path":"/Users/martadom/Desktop/TFM/tfm-marta-npm/node_modules/cache-loader/dist/cjs.js","mtime":1688895642525},{"path":"/Users/martadom/Desktop/TFM/tfm-marta-npm/node_modules/vue-loader/lib/index.js","mtime":1688895654604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJ0Bjb3JlL3ByZXNldC9wcmVzZXQvcGFnZXMvYXV0aC5zY3NzJzsK"},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4TA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"auth-wrapper auth-v2\">\n    <div class=\"auth-inner\">\n      <!-- brand logo -->\n      <router-link\n        to=\"/\"\n        class=\"brand-logo d-flex align-center\"\n      >\n        <v-img\n          :src=\"appLogo\"\n          max-height=\"30px\"\n          max-width=\"30px\"\n          alt=\"logo\"\n          contain\n          class=\"me-3 \"\n        ></v-img>\n\n        <h2 class=\"text--primary\">\n          {{ appName }}\n        </h2>\n      </router-link>\n      <!--/ brand logo -->\n\n      <v-row class=\"auth-row ma-0\">\n        <v-col\n          lg=\"8\"\n          class=\"d-none d-lg-block position-relative overflow-hidden pa-0\"\n        >\n          <div class=\"auth-illustrator-wrapper\">\n            <!-- triangle bg -->\n            <img\n              height=\"362\"\n              class=\"auth-mask-bg\"\n              :src=\"require(`@/assets/images/misc/mask-v2-${$vuetify.theme.dark ? 'dark':'light'}.png`)\"\n            />\n\n            <!-- tree -->\n            <v-img\n              height=\"226\"\n              width=\"300\"\n              class=\"auth-tree\"\n              src=\"@/assets/images/misc/tree-2.png\"\n            ></v-img>\n\n            <!-- 3d character -->\n            <div class=\"d-flex align-center h-full pa-16 pe-0\">\n              <v-img\n                contain\n                max-width=\"100%\"\n                height=\"710\"\n                class=\"auth-3d-group\"\n                :src=\"require(`@/assets/images/3d-characters/illustration-register-v2-${$vuetify.theme.dark ? 'dark':'light'}.png`)\"\n              ></v-img>\n            </div>\n          </div>\n        </v-col>\n\n        <v-col\n          lg=\"4\"\n          class=\"d-flex align-center auth-bg pa-10 pb-0\"\n        >\n          <v-row>\n            <v-col\n              cols=\"12\"\n              sm=\"8\"\n              md=\"6\"\n              lg=\"12\"\n              class=\"mx-auto\"\n            >\n              <v-card flat>\n                <v-card-text>\n                  <p class=\"text-2xl font-weight-semibold text--primary my-2\">\n                    Adventure starts here ðŸš€\n                  </p>\n                  <p class=\"mb-2\">\n                    Make your app management easy and fun!\n                  </p>\n                </v-card-text>\n\n                <!-- login form -->\n                <v-card-text>\n                  <v-form\n                    ref=\"registerForm\"\n                    @submit.prevent=\"handleFormSubmit\"\n                  >\n                    <v-text-field\n                      v-model=\"username\"\n                      outlined\n                      label=\"Username\"\n                      :error-messages=\"errorMessages.username\"\n                      :rules=\"[validators.required, validators.alphaValidator]\"\n                      placeholder=\"Username\"\n                      hide-details=\"auto\"\n                      class=\"mb-6\"\n                    ></v-text-field>\n\n                    <v-text-field\n                      v-model=\"email\"\n                      outlined\n                      :error-messages=\"errorMessages.email\"\n                      :rules=\"[validators.required, validators.emailValidator]\"\n                      label=\"Email\"\n                      placeholder=\"Email\"\n                      hide-details=\"auto\"\n                      class=\"mb-6\"\n                    ></v-text-field>\n\n                    <v-text-field\n                      v-model=\"password\"\n                      outlined\n                      :type=\"isPasswordVisible ? 'text' : 'password'\"\n                      label=\"Password\"\n                      :error-messages=\"errorMessages.password\"\n                      placeholder=\"Password\"\n                      :rules=\"[validators.required, validators.passwordValidator]\"\n                      :append-icon=\"isPasswordVisible ? icons.mdiEyeOffOutline:icons.mdiEyeOutline\"\n                      hide-details=\"auto\"\n                      class=\"mb-2\"\n                      @click:append=\"isPasswordVisible = !isPasswordVisible\"\n                    ></v-text-field>\n\n                    <v-checkbox\n                      hide-details\n                      class=\"mt-0\"\n                    >\n                      <template #label>\n                        <div class=\"d-flex align-center flex-wrap\">\n                          <span class=\"me-2\">I agree to</span><a href=\"javascript:void(0)\">privacy policy &amp; terms</a>\n                        </div>\n                      </template>\n                    </v-checkbox>\n\n                    <v-btn\n                      block\n                      color=\"primary\"\n                      type=\"submit\"\n                      class=\"mt-6\"\n                    >\n                      Sign Up\n                    </v-btn>\n                  </v-form>\n                </v-card-text>\n\n                <!-- create new account  -->\n                <v-card-text class=\"d-flex align-center justify-center flex-wrap mt-2\">\n                  <p class=\"mb-0 me-2\">\n                    Already have an account?\n                  </p>\n                  <router-link :to=\"{name:'auth-login'}\">\n                    Sign in instead\n                  </router-link>\n                </v-card-text>\n\n                <!-- divider -->\n                <v-card-text class=\"d-flex align-center mt-2\">\n                  <v-divider></v-divider>\n                  <span class=\"mx-5\">or</span>\n                  <v-divider></v-divider>\n                </v-card-text>\n\n                <!-- social links -->\n                <v-card-actions class=\"d-flex justify-center\">\n                  <v-btn\n                    v-for=\"link in socialLink\"\n                    :key=\"link.icon\"\n                    icon\n                    class=\"ms-1\"\n                  >\n                    <v-icon :color=\"$vuetify.theme.dark ? link.colorInDark:link.color\">\n                      {{ link.icon }}\n                    </v-icon>\n                  </v-btn>\n                </v-card-actions>\n              </v-card>\n            </v-col>\n          </v-row>\n        </v-col>\n      </v-row>\n    </div>\n  </div>\n</template>\n\n<script>\n// eslint-disable-next-line object-curly-newline\nimport { mdiFacebook, mdiTwitter, mdiGithub, mdiGoogle, mdiEyeOutline, mdiEyeOffOutline } from '@mdi/js'\n// eslint-disable-next-line object-curly-newline\nimport { required, emailValidator, passwordValidator, alphaValidator } from '@core/utils/validation'\nimport { ref, getCurrentInstance } from '@vue/composition-api'\nimport axios from '@axios'\nimport { useRouter } from '@core/utils'\nimport themeConfig from '@themeConfig'\n\nexport default {\n  setup() {\n    // Template Refs\n    const registerForm = ref(null)\n\n    const vm = getCurrentInstance().proxy\n    const { router } = useRouter()\n\n    const isPasswordVisible = ref(false)\n    const username = ref('johnDoe')\n    const email = ref('john@example.com')\n    const password = ref('john@MATERIO#123')\n    const errorMessages = ref([])\n    const socialLink = [\n      {\n        icon: mdiFacebook,\n        color: '#4267b2',\n        colorInDark: '#4267b2',\n      },\n      {\n        icon: mdiTwitter,\n        color: '#1da1f2',\n        colorInDark: '#1da1f2',\n      },\n      {\n        icon: mdiGithub,\n        color: '#272727',\n        colorInDark: '#fff',\n      },\n      {\n        icon: mdiGoogle,\n        color: '#db4437',\n        colorInDark: '#db4437',\n      },\n    ]\n\n    const handleFormSubmit = () => {\n      const isFormValid = registerForm.value.validate()\n\n      if (!isFormValid) return\n\n      /*\n        1. Make HTTP request to get accessToken (Register the user & login) (User will be added to the database and new generated access token will be sent for loggin in)\n        2. Store received token in localStorage for future use\n        3. Make another HTTP request for getting user information\n        4. On successful response of user information redirect to home page\n\n        ? We have use promise chaining to get user data from access token\n        ? Promise Chaining: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises#chaining\n      */\n\n      axios\n        .post('/auth/register', { username: username.value, email: email.value, password: password.value })\n        .then(response => {\n          const { accessToken } = response.data\n\n          // ? Set access token in localStorage so axios interceptor can use it\n          // Axios Interceptors: https://github.com/axios/axios#interceptors\n          localStorage.setItem('accessToken', accessToken)\n\n          return response\n        })\n        .then(() => {\n          axios.get('/auth/me').then(response => {\n            const { user } = response.data\n            const { ability: userAbility } = user\n\n            // Set user ability\n            // ? https://casl.js.org/v5/en/guide/intro#update-rules\n            vm.$ability.update(userAbility)\n\n            // ? Set user's ability in localStorage for Access Control\n            localStorage.setItem('userAbility', JSON.stringify(userAbility))\n\n            // ? We will store `userAbility` in localStorage separate from userData\n            // ? Hence, we are just removing it from user object\n            delete user.ability\n\n            // ? Set user's data in localStorage for UI/Other purpose\n            localStorage.setItem('userData', JSON.stringify(user))\n\n            // ? On success redirect to home\n            router.push('/')\n          })\n        })\n        .catch(error => {\n          // TODO: Next Update - Show notification\n          console.error('Oops, Unable to Register!')\n          console.log('error :>> ', error.response)\n          errorMessages.value = error.response.data.error\n        })\n    }\n\n    return {\n      isPasswordVisible,\n      username,\n      email,\n      password,\n      errorMessages,\n      handleFormSubmit,\n      socialLink,\n      icons: {\n        mdiEyeOutline,\n        mdiEyeOffOutline,\n      },\n      validators: {\n        required,\n        emailValidator,\n        passwordValidator,\n        alphaValidator,\n      },\n\n      // themeConfig\n      appName: themeConfig.app.name,\n      appLogo: themeConfig.app.logo,\n\n      // Template Refs\n      registerForm,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@core/preset/preset/pages/auth.scss';\n</style>\n"]}]}