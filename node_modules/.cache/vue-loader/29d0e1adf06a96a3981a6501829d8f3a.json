{"remainingRequest":"/Users/martadom/Desktop/TFM/tfm-marta-npm/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/martadom/Desktop/TFM/tfm-marta-npm/src/@core/layouts/components/vertical-nav-menu/components/vertical-nav-menu-group/VerticalNavMenuGroup.vue?vue&type=style&index=0&id=3b54e850&lang=scss&","dependencies":[{"path":"/Users/martadom/Desktop/TFM/tfm-marta-npm/src/@core/layouts/components/vertical-nav-menu/components/vertical-nav-menu-group/VerticalNavMenuGroup.vue","mtime":1689868462000},{"path":"/Users/martadom/Desktop/TFM/tfm-marta-npm/node_modules/css-loader/dist/cjs.js","mtime":1688895654492},{"path":"/Users/martadom/Desktop/TFM/tfm-marta-npm/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1688895654604},{"path":"/Users/martadom/Desktop/TFM/tfm-marta-npm/node_modules/postcss-loader/src/index.js","mtime":1688895654577},{"path":"/Users/martadom/Desktop/TFM/tfm-marta-npm/node_modules/sass-loader/dist/cjs.js","mtime":1688895656410},{"path":"/Users/martadom/Desktop/TFM/tfm-marta-npm/node_modules/cache-loader/dist/cjs.js","mtime":1688895642525},{"path":"/Users/martadom/Desktop/TFM/tfm-marta-npm/node_modules/vue-loader/lib/index.js","mtime":1688895654604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJ352dWV0aWZ5L3NyYy9zdHlsZXMvc3R5bGVzLnNhc3MnOwoKLnZlcnRpY2FsLW5hdi1tZW51LWdyb3VwIHsKICAmLnYtbGlzdC1ncm91cC0tYWN0aXZlID4gLnYtbGlzdC1ncm91cF9faGVhZGVyID4gLnYtbGlzdC1ncm91cF9faGVhZGVyX19hcHBlbmQtaWNvbiAudi1pY29uIHsKICAgIHRyYW5zZm9ybTogbm9uZTsKICB9CgogICYgPiAudi1saXN0LWdyb3VwX19oZWFkZXIgPiAudi1saXN0LWdyb3VwX19oZWFkZXJfX2FwcGVuZC1pY29uIC52LWljb24gewogICAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTsKICB9CgogICYgJiAudi1saXN0LWdyb3VwX19pdGVtcyAudi1saXN0LWl0ZW1fX2ljb24gewogICAgdmlzaWJpbGl0eTogaGlkZGVuOwogIH0KfQoKQGluY2x1ZGUgdGhlbWUodmVydGljYWwtbmF2LW1lbnUtZ3JvdXApIHVzaW5nICgkbWF0ZXJpYWwpIHsKICAmLnZlcnRpY2FsLW5hdi1tZW51LWdyb3VwLWFjdGl2ZSA+IC52LWxpc3QtZ3JvdXBfX2hlYWRlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKG1hcC1kZWVwLWdldCgkbWF0ZXJpYWwsICd0ZXh0JywgJ3ByaW1hcnknKSwgbWFwLWRlZXAtZ2V0KCRtYXRlcmlhbCwgJ3N0YXRlcycsICdzZWxlY3RlZCcpKTsKICB9Cn0KCi5hbHRlcm5hdGUtaWNvbi1zbWFsbCB7CiAgZm9udC1zaXplOiAxNHB4OwogIGhlaWdodDogMTRweDsKICB3aWR0aDogMTRweDsKfQo="},{"version":3,"sources":["VerticalNavMenuGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiJA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"VerticalNavMenuGroup.vue","sourceRoot":"src/@core/layouts/components/vertical-nav-menu/components/vertical-nav-menu-group","sourcesContent":["<template>\n  <v-list-group\n\n    ref=\"refVListGroup\"\n    class=\"vertical-nav-menu-group\"\n    :class=\"[{'vertical-nav-menu-group-active': isActive}, ...rootThemeClasses]\"\n    :value=\"isGroupExpanded\"\n    @click=\"updateGroupOpen(!isOpen)\"\n  >\n    <template #prependIcon>\n      <v-icon :class=\"{'alternate-icon-small': !item.icon}\">\n        {{ item.icon || alternateIcon }}\n      </v-icon>\n    </template>\n    <template #activator>\n      <v-list-item-title>{{ t(item.title) }}</v-list-item-title>\n\n      <v-list-item-action\n        v-if=\"item.badge\"\n        class=\"flex-shrink-0\"\n      >\n        <v-badge\n          :color=\"item.badgeColor\"\n          inline\n          :content=\"item.badge\"\n        >\n        </v-badge>\n      </v-list-item-action>\n    </template>\n\n    <component\n      :is=\"resolveNavItemComponent(child)\"\n      v-for=\"child in item.children\"\n      :key=\"child.subheader || child.title\"\n      :item=\"child\"\n    ></component>\n  </v-list-group>\n</template>\n\n<script>\n// eslint-disable-next-line object-curly-newline\nimport { computed, inject, ref, watch } from '@vue/composition-api'\n\n// SFCs\nimport useVerticalNavMenu from '@/@core/layouts/composable/vertical-nav/useVerticalNavMenu'\nimport VerticalNavMenuLink from '@core/layouts/components/vertical-nav-menu/components/vertical-nav-menu-link/VerticalNavMenuLink.vue'\nimport VerticalNavMenuSectionTitle from '@core/layouts/components/vertical-nav-menu/components/vertical-nav-menu-section-title/VerticalNavMenuSectionTitle.vue'\n\n// Composable\nimport useNav from '@/@core/layouts/composable/useNav'\nimport useAppConfig from '@core/@app-config/useAppConfig'\nimport useVerticalNavGroup from '@core/layouts/composable/vertical-nav/useVerticalNavGroup'\nimport { useUtils as useAclUtils } from '@core/libs/acl'\nimport { useUtils } from '@core/libs/i18n'\n\n// Other\nimport themeConfig from '@themeConfig'\n\nexport default {\n  name: 'VerticalNavMenuGroup',\n  components: {\n    VerticalNavMenuLink,\n    VerticalNavMenuSectionTitle,\n  },\n  props: {\n    item: {\n      type: Object,\n      required: true,\n    },\n  },\n  computed: {\n    // From Vuetify's `vuetify/src/mixins/themeable/index.ts` mixin\n    rootThemeClasses() {\n      return {\n        'theme--dark': this.$vuetify.theme.isDark,\n        'theme--light': !this.$vuetify.theme.isDark,\n      }\n    },\n  },\n  setup(props) {\n    const { resolveNavItemComponent } = useVerticalNavMenu()\n    const { isOpen, updateGroupOpen, isActive } = useVerticalNavGroup(props.item)\n    const { canViewVerticalNavMenuGroup } = useAclUtils()\n    const { isNavGroupActive } = useNav()\n    const { menuIsVerticalNavMini } = useAppConfig()\n    const isMouseHovered = inject('isMouseHovered')\n\n    const isAccordion = themeConfig.menu.verticalMenuAccordion\n\n    // Template ref\n    const refVListGroup = ref(null)\n\n    // VNavigationDrawer Internal API\n    const isGroupExpanded = computed({\n      get: () => (refVListGroup.value ? refVListGroup.value.isActive : false),\n      set: value => {\n        refVListGroup.value.isActive = value\n      },\n    })\n    watch(isOpen, value => {\n      if (isAccordion) isGroupExpanded.value = value\n    })\n\n    watch(menuIsVerticalNavMini, val => {\n      if (val && !isMouseHovered) isGroupExpanded.value = false\n      else {\n        isGroupExpanded.value = isOpen.value\n      }\n    })\n\n    watch(isMouseHovered, value => {\n      if (menuIsVerticalNavMini.value) {\n        if (value) isGroupExpanded.value = isOpen.value\n        else isGroupExpanded.value = false\n      }\n    })\n\n    // I18n\n    const { t } = useUtils()\n\n    return {\n      isGroupExpanded,\n      resolveNavItemComponent,\n      isNavGroupActive,\n      menuIsVerticalNavMini,\n      refVListGroup,\n      isMouseHovered,\n      isOpen,\n      isActive,\n      updateGroupOpen,\n\n      // Alternate Icon\n      alternateIcon: themeConfig.menu.groupChildIcon,\n\n      // i18n\n      t,\n\n      // ACL\n      canViewVerticalNavMenuGroup,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import '~vuetify/src/styles/styles.sass';\n\n.vertical-nav-menu-group {\n  &.v-list-group--active > .v-list-group__header > .v-list-group__header__append-icon .v-icon {\n    transform: none;\n  }\n\n  & > .v-list-group__header > .v-list-group__header__append-icon .v-icon {\n    transform: rotate(-90deg);\n  }\n\n  & & .v-list-group__items .v-list-item__icon {\n    visibility: hidden;\n  }\n}\n\n@include theme(vertical-nav-menu-group) using ($material) {\n  &.vertical-nav-menu-group-active > .v-list-group__header {\n    background-color: rgba(map-deep-get($material, 'text', 'primary'), map-deep-get($material, 'states', 'selected'));\n  }\n}\n\n.alternate-icon-small {\n  font-size: 14px;\n  height: 14px;\n  width: 14px;\n}\n</style>\n"]}]}